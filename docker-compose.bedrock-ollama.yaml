version: '3.8'

services:
  # Ollama service (containerized)
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - open-webui-network
    restart: unless-stopped

  # Bedrock Access Gateway - OpenAI-compatible API for AWS Bedrock
  bedrock-gateway:
    image: bedrock-gateway
    container_name: bedrock-gateway
    ports:
      - "8000:80"
    environment:
      # AWS Credentials - Replace these with your actual credentials
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:-}  # Optional, only if using temporary credentials
      - AWS_REGION=${AWS_REGION:-us-east-1}
      # API Key for authentication (default is "bedrock")
      - DEFAULT_API_KEYS=bedrock
      # Enable debug logging
      - DEBUG=true
    networks:
      - open-webui-network
    restart: unless-stopped

  # Open WebUI
  open-webui:
    image: open-webui
    container_name: open-webui
    ports:
      - "3000:8080"
    environment:
      # Ollama configuration (using containerized Ollama)
      - OLLAMA_BASE_URL=http://ollama:11434
      - ENABLE_OLLAMA_API=true
      # OpenAI API configuration pointing to Bedrock Gateway
      - OPENAI_API_BASE_URL=http://bedrock-gateway/api/v1
      - OPENAI_API_KEY=bedrock  # This matches DEFAULT_API_KEYS in bedrock-gateway
      - ENABLE_OPENAI_API=true
      # Database URL (using SQLite by default)
      - DATABASE_URL=sqlite:////app/backend/data/webui.db
      # WebUI Secret Key for session management
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-}
    volumes:
      - open-webui-data:/app/backend/data
    networks:
      - open-webui-network
    depends_on:
      - bedrock-gateway
      - ollama
    restart: unless-stopped

networks:
  open-webui-network:
    driver: bridge

volumes:
  open-webui-data:
  ollama-data: 